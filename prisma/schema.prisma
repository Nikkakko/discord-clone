// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Profile {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  userId  String    @unique 
  name    String
  imageUrl String @db.String
  email   String @db.String

  //relationships
  servers Server[]
  members Member[]
  channels Channel[]

  //timestamps
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt

}

model Server {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String @db.String
  inviteCode String @db.String

  //relationships
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String @db.ObjectId

  members Member[]
  channels Channel[]
  
  //timestamps
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  role     MemberRole @default(GUEST)

  //relationships
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String @db.ObjectId
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String @db.ObjectId

  //timestamps
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  type     ChannelType @default(TEXT)

  //relationships
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String @db.ObjectId

  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  //timestamps
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}

